#!/bin/bash
#docker run --rm -it -v "$PWD:/fuzz" --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --platform linux/amd64 --name fuzzing aflplusplus/aflplusplus:latest
#
# To be able to look at the code through our LSP we need to run `compiledb -n make` in the directories from our host.

get_help () {
	echo -e "\nUsage:"
	echo -e "\t./fuzzing.sh BUILD \t\t To build the binaries"
	echo -e "\t./fuzzing.sh FUZZ \t\t To start fuzzing"

	echo
	echo -e "\tFIX=1 ./fuzzing.sh [args] \t To perform the action in the \"fix\" directory"
}


if [ -n "$FIX" ];then
	FUZZ_DIR="/fuzz/fix"
else
	FUZZ_DIR="/fuzz"
fi

# For Tmux
SES_NAME="fuzz"

# Env for the Library
TARGET_LIB_DIR="$FUZZ_DIR/libexif"		# Change me
BUILD_LIB_DIR="$TARGET_LIB_DIR/install"		# Change me

BUILD_LIB_DIR_ASAN="${BUILD_LIB_DIR}_asan"
BUILD_LIB_DIR_DBG="${BUILD_LIB_DIR}_dbg"

# Env for the binary
TARGET_BIN_DIR="$FUZZ_DIR/exif"			# Change me
BUILD_BIN_DIR="$TARGET_BIN_DIR/install"		# Change me
TARGET_BIN_BINARY="$BUILD_BIN_DIR/bin/exif"	# Change me

# ASAN
BUILD_BIN_DIR_ASAN="${BUILD_BIN_DIR}_asan"
TARGET_BIN_BINARY_ASAN="$BUILD_BIN_DIR_ASAN/bin/exif"

# DEBUG
BUILD_BIN_DIR_DBG="${BUILD_BIN_DIR}_dbg"
TARGET_BIN_BINARY_DBG="$BUILD_BIN_DIR_DBG/bin/exif"

# Seed/out for our fuzzer
SEEDS="$FUZZ_DIR/corpus"
OUT_DIR="$FUZZ_DIR/out"

# AFL env
AFL_DIR="/AFLplusplus"
AFL_CC="$AFL_DIR/afl-clang-lto"
AFL_FUZZ="$AFL_DIR/afl-fuzz"






if [ "$1" == "BUILD" ];then
	# Moving to the lib directory to clean and build
	cd "$TARGET_LIB_DIR"
	rm -rf "$BUILD_LIB_DIR/*"
	rm -rf "$BUILD_LIB_DIR_DBG/*"
	rm -rf "$BUILD_LIB_DIR_ASAN/*"

	# Building the library
	autoreconf -i
	make clean

	echo -e "\nBuilding the library With AFL++\n"
	CC="$AFL_CC" CXX="$AFL_CC++" ./configure --enable-shared=no --prefix="$BUILD_LIB_DIR" && \
	make -j$(nproc)&& \
	make install
	make clean

	echo -e "\nBuilding the library With ASAN\n"
	CC="$AFL_CC" CXX="$AFL_CC++" ./configure --enable-shared=no --prefix="$BUILD_LIB_DIR_ASAN" &&\
	AFL_USE_ASAN=1 make -j$(nproc) &&\
	AFL_USE_ASAN=1 make install
	make clean

	echo -e "\nBuilding the library Without AFL++\n"
	CFLAGS="-g" ./configure --enable-shared=no --prefix="$BUILD_LIB_DIR_DBG" && \
	make -j$(nproc) && \
	make install
	make clean


	# Moving to the binary directory to clean and build
	cd "$TARGET_BIN_DIR"
	rm -rf "$BUILD_BIN_DIR/*"
	rm -rf "$BUILD_BIN_DIR_DBG/*"
	rm -rf "$BUILD_BIN_DIR_ASAN/*"

	# Building the binary
	autoreconf -i
	make clean

	echo -e "\nBuilding the binary With AFL++\n"
	CC="$AFL_CC" CXX="$AFL_CC++" ./configure --enable-shared=no --prefix="$BUILD_BIN_DIR" PKG_CONFIG_PATH="$BUILD_LIB_DIR/lib/pkgconfig" && \
	make -j$(nproc)&& \
	make install
	make clean

	echo -e "\nBuilding the binary With ASAN\n"
	AFL_USE_ASAN=1 CC="$AFL_CC" CXX="$AFL_CC++" ./configure --enable-shared=no --prefix="$BUILD_BIN_DIR_ASAN" PKG_CONFIG_PATH="$BUILD_LIB_DIR_ASAN/lib/pkgconfig" &&\
	AFL_USE_ASAN=1 make -j$(nproc) &&\
	AFL_USE_ASAN=1 make install
	make clean

	echo -e "\nBuilding the binary Without AFL++\n"
	CFLAGS="-g" ./configure --enable-shared=no --prefix="$BUILD_BIN_DIR_DBG" PKG_CONFIG_PATH="$BUILD_LIB_DIR_DBG/lib/pkgconfig" && \
	make -j$(nproc)&& \
	make install
	make clean


	echo -e "\nDone\n"
	echo "The binary to run with AFL is \"$TARGET_BIN_BINARY\""
	echo "The binary to run with ASAN is \"$TARGET_BIN_BINARY_ASAN\""
	echo "The binary to run without AFL: \"$TARGET_BIN_BINARY_DBG\""

elif [[ "$1" == "FUZZ" || "$1" == "CON" ]];then

	if [ "$1" == "CON" ];then
		SEEDS="-"
	fi
	
	# Running the fuzz
	echo -e "\nStarting the Fuzzing\n"
	# screen -dmS master "$AFL_FUZZ" -i "$SEEDS" -o "$OUT_DIR" -s 333 -m none -M master -- "$TARGET_BIN_BINARY" @@
	# screen -dmS asan "$AFL_FUZZ" -i "$SEEDS" -o "$OUT_DIR" -s 333 -m none -S asan -- "$TARGET_BIN_BINARY_ASAN" @@
	tmux new -ds $SES_NAME -n master "$AFL_FUZZ" -i "$SEEDS" -o "$OUT_DIR" -s 333 -m none -M master -- "$TARGET_BIN_BINARY" @@
	tmux neww -dt $SES_NAME -n asan "$AFL_FUZZ" -i "$SEEDS" -o "$OUT_DIR" -s 333 -m none -S asan -- "$TARGET_BIN_BINARY_ASAN" @@
	tmux attach
else
	get_help
fi
